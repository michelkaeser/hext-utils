<project name="hext-utils" default="exit" basedir=".">
    <description>A collection of tiny helper and utility classes for Hext.</description>

    <property environment="env" />
    <property name="workspace" location="${env.WORKSPACE}" />
    <property name="src" location="${workspace}/src" />
    <property name="bin"  location="${workspace}/bin" />
    <property name="build" location="${workspace}/build" />

    <target name="init" description="Creates the directories needed to store output">
        <echo>Creating all required directories...</echo>
        <mkdir dir="${bin}" />
    </target>

    <target name="dependencies" depends="init" description="Installs required dependencies">
        <echo>Installing required dependencies...</echo>
        <exec executable="haxelib">
            <arg value="install" />
            <arg value="hxcpp" />
        </exec>
        <exec executable="haxelib">
            <arg value="install" />
            <arg value="hxcs" />
        </exec>
        <exec executable="haxelib">
            <arg value="install" />
            <arg value="hxjava" />
        </exec>
        <!--<exec executable="haxelib">
            <arg value="git" />
            <arg value="hext-core" />
            <arg value="git@git.rackster.ch:MaddinXx/hx-lib.git" />
        </exec>-->
        <exec executable="haxelib">
            <arg value="install" />
            <arg value="mcover" />
        </exec>
    </target>

    <target name="build-tests" depends="dependencies" description="Builds the unit test runners">
        <echo>Compiling the source code...</echo>
        <exec executable="haxe" resultproperty="build-tests.code">
            <arg value="${build}/build_tests.hxml" />
        </exec>
        <condition property="build-tests.failed">
            <isfailure code="${build-tests.code}" />
        </condition>
    </target>

    <target name="test" depends="build-tests" unless="build-tests.failed" description="Runs the unit tests">
        <echo>Running unit tests...</echo>
        <exec executable="${bin}/cpp/Runner" resultproperty="cpp.code" />
        <exec executable="mono" resultproperty="cs.code">
            <arg value="${bin}/cs/bin/Runner.exe" />
        </exec>
        <java jar="${bin}/java/Runner.jar" fork="true" resultproperty="java.code" />
        <exec executable="node" resultproperty="js.code">
            <arg value="${bin}/Runner.js" />
        </exec>
        <exec executable="neko" resultproperty="neko.code">
            <arg value="${bin}/Runner.n" />
        </exec>
        <exec executable="php" resultproperty="php.code">
            <arg value="${bin}/php/index.php" />
        </exec>
        <condition property="test.failed">
            <or>
                <isfailure code="${cpp.code}" />
                <isfailure code="${cs.code}" />
                <isfailure code="${java.code}" />
                <isfailure code="${js.code}" />
                <isfailure code="${neko.code}" />
                <isfailure code="${php.code}" />
            </or>
        </condition>
    </target>

    <target name="build-api" depends="test" description="Builds the API documentation">
        <echo>Building the API documentation...</echo>
        <exec executable="haxe" resultproperty="build-api.code">
            <arg value="${build}/build_api.hxml" />
        </exec>
        <condition property="build-api.failed">
            <isfailure code="${build-api.code}" />
        </condition>
    </target>

    <target name="cleanup" depends="build-api" description="Removes compiled files and directories">
        <echo>Removing (temporary) directories...</echo>
        <delete dir="${bin}" />
        <delete dir="${workspace}/.temp" />
    </target>

    <target name="exit" depends="cleanup" description="Marks the build as failed if one of the targets failed">
        <fail if="build-tests.failed">Build step (tests) failed. Check output log for more information.</fail>
        <fail if="test.failed">Unit tests step failed. Check output log for more information.</fail>
        <fail if="build-api.failed">Build step (API) failed. Check output log for more information.</fail>
        <echo>Everything went well. Good job!</echo>
    </target>
</project>
